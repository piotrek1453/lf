# interpreter for shell commands
set shell zsh

# set '-eu' options for shell commands
# These options are used to have safer shell commands. Option '-e' is used to
# exit on error and option '-u' is used to give error for unset variables.
# Option '-f' disables pathname expansion which can be useful when $f, $fs, and
# $fx variables contain names with '*' or '?' characters. However, this option
# is used selectively within individual commands as it can be limiting at
# times.
set shellopts '-eu'

# set internal field separator (IFS) to "\n" for shell commands
# This is useful to automatically split file names in $fs and $fx properly
# since default file separator used in these variables (i.e. 'filesep' option)
# is newline. You need to consider the values of these options and create your
# commands accordingly.
set ifs "\n"

# leave some space at the top and the bottom of the screen
set scrolloff 10
set previewer ~/.config/lf/preview
set cleaner ~/.config/lf/cleaner
map . set hidden!
 
# purge the unclean
cmd remove ${{
    if [ -z $fs ]; then
        rm -fr $f
    else
        IFS=':'; echo $fs | tr " " "\n"
        echo 'delete? [y/n]'
        read ans

        [ $ans = 'y' ] && (echo 'deleting files...' && rm -fr $fs) || (echo 'cancelled...')
    fi
}}
map xx delete
map xX push :remove

# text files to nvim
cmd open ${{
    case $(file --mime-type -Lb $f) in
        text/*) nvim $fx;;
        image/*) feh $f ;;
        application/pdf) nohup zathura $fx > /dev/null 2> /dev/null &;;
        *) for f in $fx; do xdg-open $f > /dev/null 2> /dev/null & done;;
    esac
}}

# change dir
